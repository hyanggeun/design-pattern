@startuml
namespace main {
    class Americano << (S,Aquamarine) >> {
        - cost int
        - description string

        - getCost() int
        - setCost(cost int) 
        - getDescription() string
        - setDescription(desc string) 
        - withDeco(deco DecoratorIf) DecoratorIf

    }
    interface BeverageIf  {
        - getCost() int
        - setCost( int) 
        - getDescription() string
        - setDescription( string) 
        - withDeco(decoratorIf DecoratorIf) DecoratorIf

    }
    interface DecoratorIf  {
        - build() BeverageIf

    }
    class Milk << (S,Aquamarine) >> {
        - a BeverageIf
        - cost int
        - description string

        - getCost() int
        - setCost(i int) 
        - getDescription() string
        - setDescription(s string) 
        - withDeco(deco DecoratorIf) DecoratorIf
        - build() BeverageIf

    }
    class Whip << (S,Aquamarine) >> {
        - a BeverageIf
        - cost int
        - description string

        - getCost() int
        - setCost(i int) 
        - getDescription() string
        - setDescription(s string) 
        - withDeco(deco DecoratorIf) DecoratorIf
        - build() BeverageIf

    }
}
"main.BeverageIf" *-- "extends""main.DecoratorIf"

"main.BeverageIf" <|-- "implements""main.Americano"
"main.BeverageIf" <|-- "implements""main.Milk"
"main.DecoratorIf" <|-- "implements""main.Milk"
"main.BeverageIf" <|-- "implements""main.Whip"
"main.DecoratorIf" <|-- "implements""main.Whip"


@enduml
